/* Partner 1 Name & E-mail: Emanuel Halfon ehalf001@ucr.edu
* Partner 2 Name & E-mail:  Christian Grayson cgray009@ucr.edu
* Lab Section: 024
* Assignment: Lab # 3 Exercise # 5
* Exercise Description: Adding the first bit and the second bit of an input.
*
* I acknowledge all content contained herein, excluding template or example
* code, is my own original work.
*/

#include <avr/io.h>

unsigned char SetBit(unsigned char x, unsigned char k, unsigned char b) {
	return (b ? x | (0x01 << k) : x & ~(0x01 << k));
}
unsigned char GetBit(unsigned char x, unsigned char k) {
	return ((x & (0x01 << k)) != 0);
}


int main(void)
{
	PORTB = 0x00;
	while(1)
	{
		unsigned short input = (short)PIND; // 01010110, 00000001 => 010101101
		input << 1;
		input = input + (PINB & 0x01);
		if(input >= 70)
		{
			PORTB = 0x02;
		}
		else if(input > 5)
		{
			PORTB = 0x04;
		}
		else
		{
			PORTB = 0x00;
		}
		
	}	
}